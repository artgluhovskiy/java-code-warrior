buildscript {
    ext {
        springBootVersion = '2.1.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

ext {
    springBootVersion = '2.1.2.RELEASE'
    targetResourceDir = '/docker'
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

sourceCompatibility = 1.8
targetCompatibility = 1.8

bootJar {
    baseName = 'service-registry-boot'
}

repositories {
    mavenCentral()
    mavenLocal()
}

buildScan {
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'
}

test {
    useJUnitPlatform()
    testLogging {
        showStandardStreams = true
    }
}

dependencies {
         
    /* *** Spring Boot *** */

    implementation('org.springframework.boot:spring-boot-starter-actuator')
    
    /* *** Spring Cloud *** */
    
    implementation('org.springframework.cloud:spring-cloud-starter-netflix-eureka-server')

    /* *** Third Parties *** */
    
    implementation('org.projectlombok:lombok:1.18.4')
    annotationProcessor('org.projectlombok:lombok:1.18.4')
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Greenwich.RELEASE'
    }
}

task collectResourcesToDir(type: Copy, dependsOn: build) {
    println "Copying project resources to the directory '$targetResourceDir'"
    from "$buildDir/libs", "$projectDir/src/main/resources"
    include "*.jar", "*.sh"
    into "$projectDir$targetResourceDir"
}

task runBuild(dependsOn: collectResourcesToDir) {
    println 'Running build!'
}

task cleanProject(type: Delete, dependsOn: clean) {
    delete "$projectDir$targetResourceDir"
}