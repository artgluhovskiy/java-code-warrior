version: '3'

services:

  # Netflix Eureka Service Registry
  service-registry:
    container_name: service-registry
    build:
      context: ./service-registry
    ports:
      - "8761:8761"
      - "8791:8791"
    environment:
      SERVICE_REGISTRY_HOST: service-registry
      SERVICE_REGISTRY_PORT: 8761

  # Client Service
  client-service:
    container_name: client-service
    depends_on:
      - service-registry
      - mysqldb
    build:
      context: ./client-service
    environment:
      USER_SERVICE_HOST: user-service
      COMPILER_SERVICE_HOST: compiler-service
      EXECUTION_SERVICE_HOST: executor-service
      TASK_SERVICE_HOST: task-service

      DATABASE_HOST: mysqldb
      DATABASE_PORT: 3306
      DATABASE_USER: root
      DATABASE_PASSWORD: rootpassword
      DATABASE_NAME: users

      SERVICE_REGISTRY_HOST: service-registry
      SERVICE_REGISTRY_PORT: 8761
    ports:
      - "8085:8085"
      - "8095:8095"

  # User Service
  user-service:
    container_name: user-service
    depends_on:
      - service-registry
      - mysqldb
    build:
      context: ./user-service
    environment:
      DATABASE_HOST: mysqldb
      DATABASE_PORT: 3306
      DATABASE_USER: root
      DATABASE_PASSWORD: rootpassword
      DATABASE_NAME: users

      SERVICE_REGISTRY_HOST: service-registry
      SERVICE_REGISTRY_PORT: 8761
    ports:
      - "8081:8081"
      - "8091:8091"

  # Compiler Service
  compiler-service:
    container_name: compiler-service
    depends_on:
      - service-registry
    build:
      context: ./compiler-service
    environment:
      SERVICE_REGISTRY_HOST: service-registry
      SERVICE_REGISTRY_PORT: 8761
    ports:
      - "8082:8082"
      - "8092:8092"
    volumes:
      - "./app/logs:/app/logs"

  # Execution Service
  execution-service:
    container_name: execution-service
    depends_on:
      - service-registry
    build:
      context: ./execution-service
    environment:
      SERVICE_REGISTRY_HOST: service-registry
      SERVICE_REGISTRY_PORT: 8761
    ports:
      - "8083:8083"
      - "8093:8093"

  # Task Service
  task-service:
    container_name: task-service
    depends_on:
      - service-registry
      - mongodb
    build:
      context: ./task-service
    environment:
      DATABASE_HOST: mongodb
      DATABASE_PORT: 27017
      DATABASE_NAME: tasks

      SERVICE_REGISTRY_HOST: service-registry
      SERVICE_REGISTRY_PORT: 8761

      KAFKA_BOOTSTRAP_HOST: kafka
      KAFKA_BOOTSTRAP_PORT: 9093
    ports:
      - "8084:8084"
      - "8094:8094"

  # Logs Aggregator
  logs-aggregator:
    container_name: logs-aggregator
    build:
      context: ./logs-aggregator
    environment:
      KAFKA_BOOTSTRAP_HOST: kafka
      KAFKA_BOOTSTRAP_PORT: 9093
    ports:
      - "8086:8086"
      - "8096:8096"

  # Zookeeper
  zookeeper:
    image: wurstmeister/zookeeper:latest
    expose:
      - "2181"

  # Kafka
  kafka:
    image: wurstmeister/kafka:2.12-2.0.1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE

  # MySQL
  mysqldb:
    image: mysql:5.7
    container_name: mysqldb
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword

  # MongoDB
  mongodb:
    image: mongo:4.0
    container_name: mongodb
    ports:
      - "27017:27017"