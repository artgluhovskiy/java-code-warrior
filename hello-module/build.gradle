import org.art.web.ReleaseVersionTask
import org.art.web.ProjectVersion
import org.art.web.ReleaseVersionListener

apply plugin: 'java'

version = '0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.1'
}

jar {
    manifest {
        attributes 'Main-Class': 'org.art.web.Hello'
    }
}

//task printVersion(group: 'versioning', description: 'Prints project version.') << {
//    println "Before reading the project version"
//    logger.quiet "Logger: Before reading the project version"
//    println "Version: $version"
//}

version = new ProjectVersion(0, 2)

ext.versionFile = file('version.properties')

task loadVersion {
    project.version = readVersion()
}

ProjectVersion readVersion() {
    logger.quiet 'Reading the version file.'
    if (!versionFile.exists()) {
        throw new GradleException("Required version file does not exist:" +
                "$versionFile.canonicalPath")
    }
    Properties versionProps = new Properties()
    versionFile.withInputStream { stream ->
        versionProps.load(stream)
    }
    new ProjectVersion(versionProps.major.toInteger(),
            versionProps.minor.toInteger(),
            versionProps.release.toBoolean())
}

task makeReleaseVersion(group: 'versioning', description: 'Makes project a release version.') {
    inputs.property('release', version.release)
    outputs.file versionFile

    doLast {
        println 'In action 1!'
        version.release = true
        ant.propertyfile(file: versionFile) {
            entry(key: 'release', type: 'string', operation: '=', value: 'true')
        }
    }
}

task makeReleaseVersionMod(type: ReleaseVersionTask) {
    release = version.release
    destFile = versionFile
}

def releaseVersionListener = new ReleaseVersionListener()
gradle.taskGraph.addTaskExecutionGraphListener(releaseVersionListener)
