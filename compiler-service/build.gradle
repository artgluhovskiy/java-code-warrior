buildscript {
    ext {
        springBootVersion = '2.1.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "net.saliman.cobertura" version "2.6.0"
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'

ext {
    springBootVersion = '2.1.2.RELEASE'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

bootJar {
    baseName = 'compiler-service-boot'
    version = '0.0.1-SNAPSHOT'
}

jar {
    enabled = true
}

repositories {
    mavenCentral()
    mavenLocal()
}

test {
    useJUnitPlatform()
    testLogging {
        showStandardStreams = true
    }
}

dependencies {
    
    /* *** Spring *** */
    implementation('org.springframework.boot:spring-boot-starter')
    implementation("org.springframework.boot:spring-boot-starter-web")
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    
    implementation('com.esotericsoftware:kryo:4.0.0')

    /* *** Common Libs *** */
    implementation('org.apache.commons:commons-lang3:3.1')
    implementation('org.apache.commons:commons-collections4:4.0')
    
    implementation('org.apache.logging.log4j:log4j-core:2.11.1')

    implementation('org.projectlombok:lombok:1.18.4')
    annotationProcessor("org.projectlombok:lombok:1.18.4")
    
    /* *** TDD *** */
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.3.1')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.3.1')
    
    testImplementation('org.mockito:mockito-junit-jupiter:2.18.3')
    testImplementation "org.mockito:mockito-core:2.+"
}

dependencyManagement {
    imports {
        mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
    }
}